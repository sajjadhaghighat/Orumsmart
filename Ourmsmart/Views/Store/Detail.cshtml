@model Ourmsmart.Models.FAProduct
@using Ourmsmart.Models

@{
    ViewBag.Title = Model.Title;
    Layout = "~/Views/Shared/_LayoutMain.cshtml";
    VIRADB db = new VIRADB();
}
<br />
<style>
    .imagepath {
        height: auto;
        text-align: center;
    }

        .imagepath img {
            max-width: 100%;
            text-align: center;
            height: auto;
        }

    .detailstyle {
        border: 5px solid lightgrey;
        border-radius: 5px;
        padding: 20px;
        width: 100%;
    }

    dt {
        color: #207dff;
    }
    dd {
        color: black;
    }

    .searchform {
        width: 100%;
        height: auto;
        margin: 15px;
        padding:10px;
    }

    #myImg {
        border-radius: 5px;
        cursor: pointer;
        transition: 0.3s;
    }

        #myImg:hover {
            opacity: 0.7;
        }

    /* The Modal (background) */
    .modal {
        display: none; /* Hidden by default */
        position: fixed; /* Stay in place */
        z-index: 1; /* Sit on top */
        padding-top: 100px; /* Location of the box */
        left: 0;
        top: 0;
        width: 100%; /* Full width */
        height: 100%; /* Full height */
        overflow: auto; /* Enable scroll if needed */
        background-color: rgb(0,0,0); /* Fallback color */
        background-color: rgba(0,0,0,0.9); /* Black w/ opacity */
    }

    /* Modal Content (image) */
    .modal-content {
        margin: auto;
        display: block;
        width: 80%;
        max-width: 700px;
    }

    /* Caption of Modal Image */
    #caption {
        margin: auto;
        display: block;
        width: 80%;
        max-width: 700px;
        text-align: center;
        color: #ccc;
        padding: 10px 0;
        height: 150px;
    }

    /* Add Animation */
    .modal-content, #caption {
        -webkit-animation-name: zoom;
        -webkit-animation-duration: 0.6s;
        animation-name: zoom;
        animation-duration: 0.6s;
    }

    @@-webkit-keyframes zoom {
        from {
            -webkit-transform: scale(0)
        }

        to {
            -webkit-transform: scale(1)
        }
    }

    @@keyframes zoom {
        from {
            transform: scale(0)
        }

        to {
            transform: scale(1)
        }
    }

    /* The Close Button */
    .close {
        position: relative;
        top: 15px;
        right: 35px;
        color: #f1f1f1;
        font-size: 40px;
        font-weight: bold;
        transition: 0.3s;
    }

        .close:hover,
        .close:focus {
            color: #bbb;
            text-decoration: none;
            cursor: pointer;
        }

    /* 100% Image Width on Smaller Screens */
    @@media only screen and (max-width: 700px) {
        .modal-content {
            width: 100%;
        }
    }
    .constyle {
        color:black;
    }
    .constyle img{
        width:100%;
    }
</style>
<div class="container detailstyle">
    <h4>مشخصات محصول</h4>
    @Html.ActionLink("برگشت به فروشگاه", "Index")
    <hr />
    <div class="row">
        <div class="col-md-4 imagepath">
            <img id="myImg" src="../../@Model.Imagepath" width="300" alt="@Model.Title" />
        </div>
        <dl class="col-md-8 dl-horizontal">
            <dt>
                نام کالا
            </dt>

            <dd>
                @Html.DisplayFor(model => model.Title)
            </dd>

            <dt>
                معرفی
            </dt>

            <dd>
                @Html.DisplayFor(model => model.Summary)
            </dd>

            <dt>
                قیمت
            </dt>

            <dd>
                <span id="number"></span> ریال
            </dd>
        </dl>
            <form class="row bg-light searchform" method="get" action="@Url.Action("AddItemToBasket", "Store")">
                @{
                    var qcate = (from c in db.Features
                                 group c by c.Cate into g
                                 select new { Cate = g.Key });
                    var qtitle = (from c in db.Features select c);
                    int i = 1;
                }
                @foreach (var item in qcate)
                {
                    string s = "select" + i.ToString();
                    <span style='color:#207dff'>@item.Cate</span>
                    <div class="col-md-12 form-group">
                        <select class="form-control" name="Cate" id="@s" onchange="changePrice()">
                            @foreach (var tt in qtitle)
                            {
                                if (tt.Cate == item.Cate)
                                {
                                    <option value="@tt.FID" title="@tt.Price" @if (tt.Price == "0") { Html.Raw("selected"); }>@tt.Title</option>
                                }
                            }
                        </select>
                    </div>
                    i++;
                    <br />
                }
                <span style='color:#207dff'>
                   وضعیت : 
                </span>
                @if (Model.Status == "موجود" && Model.Qty > 0)
                {
                    @Html.Raw("<span style='color:green'>")
                    @Html.Raw("موجود")
                    @Html.Raw("</span>")

                    <div class="form-group col-md-12">
                        <input type="number" hidden class="search-form-control" name="pid" id="pid" value="@Model.PID">
                        <label style='color:#207dff'>موجودی : @Model.Qty عدد</label>
                        <input type="number" class="search-form-control" style="width:100%" name="qty" id="qty" placeholder="تعداد ..." min="1" max="@Model.Qty">
                    </div>
                    <div class="form-group col-md-12">
                        <button type="submit" class="btn btn-secondary ">افزودن به سبد خرید</button>
                    </div>

                }
                else if (Model.Status == "ناموجود")
                {
                    @Html.Raw("<span style='color:red'>")
                    @Html.Raw("ناموجود");
                    @Html.Raw("</span>")
                }
                else if (Model.Status == "بزودی")
                {
                    @Html.Raw("<span style='color:#207dff'>")
                    @Html.Raw("بزودی");
                    @Html.Raw("</span>")
                }
            </form>
            
    </div>
</div>
<div class="container detailstyle">
    <div style="width:100%;background-color:#207dff;color:white;text-align:center">
        توضیحات
    </div>
    <div class="constyle" style="width:100%;padding:20px;">
        @Html.Raw(Model.Description)
    </div>
</div>
@{

        var cshart = (from a in db.FAContents select a).Where(x => x.title == "شرایط پرداخت").FirstOrDefault();
        if (cshart != null)
        {
        <div class="container detailstyle">
            <div style="width:100%;background-color:#207dff;color:white;text-align:center">
                شرایط پرداخت
            </div>

            <div class="constyle" style="padding:20px;">
                @Html.Raw(cshart.content)
            </div>
        </div>
    }
}


<div id="myModal" class="modal">
    <span class="close">&times;</span>
    <img class="modal-content" id="img01">
    <div id="caption"></div>
</div>


<script src="~/Content/Home/js/jquery.min.js"></script>
<script src="~/Content/jQuery.persianNumbers-1.0.js"></script>
<script>
    // Get the modal
    var modal = document.getElementById("myModal");

    // Get the image and insert it inside the modal - use its "alt" text as a caption
    var img = document.getElementById("myImg");
    var modalImg = document.getElementById("img01");
    var captionText = document.getElementById("caption");
    img.onclick = function () {
        modal.style.display = "block";
        modalImg.src = this.src;
        captionText.innerHTML = this.alt;
    }

    // Get the <span> element that closes the modal
    var span = document.getElementsByClassName("close")[0];

    // When the user clicks on <span> (x), close the modal
    span.onclick = function () {
        modal.style.display = "none";
    }
</script>

<script type="text/javascript" language="javascript">
           var number_input = @Model.Price;
           number_input += '';
           number_input = number_input.replace(',', ''); number_input = number_input.replace(',', ''); number_input = number_input.replace(',', '');
           number_input = number_input.replace(',', ''); number_input = number_input.replace(',', ''); number_input = number_input.replace(',', '');
           x = number_input.split('.');
           x1 = x[0];
           x2 = x.length > 1 ? '.' + x[1] : '';
           var rgx = /(\d+)(\d{3})/;
           while (rgx.test(x1))
                x1 = x1.replace(rgx, '$1' + ',' + '$2');
           document.getElementById("number").innerHTML = $.persianNumbers(x1 + x2);
            
</script>


<script>
    function convert(number_input) {
           number_input += '';
           number_input = number_input.replace(',', ''); number_input = number_input.replace(',', ''); number_input = number_input.replace(',', '');
           number_input = number_input.replace(',', ''); number_input = number_input.replace(',', ''); number_input = number_input.replace(',', '');
           x = number_input.split('.');
           x1 = x[0];
           x2 = x.length > 1 ? '.' + x[1] : '';
           var rgx = /(\d+)(\d{3})/;
           while (rgx.test(x1))
                x1 = x1.replace(rgx, '$1' + ',' + '$2');
           console.log(x1 + x2);
           document.getElementById("number").innerHTML = $.persianNumbers(x1 + x2);
    }
    function changePrice() {
        var p = @Model.Price;
        for (var i = 0; i < @qcate.Count(); i++) {
           var con = "#select" + (i + 1).toString();
           p = p + parseInt($(con).find("option:selected").attr("title")); 
        }
        convert(p);
    }

</script>
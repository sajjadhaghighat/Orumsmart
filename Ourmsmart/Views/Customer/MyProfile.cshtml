@model Ourmsmart.Models.Customer

@{
    ViewBag.Title = "پروفایل";
    Layout = "~/Views/Shared/_LayoutPanel.cshtml";
}

<div style="text-align:right;background-color:white;padding:15px" dir="rtl">
    <form id="uform">
        @Html.AntiForgeryToken()

        <div class="form-horizontal">
            <h4>پروفایل</h4>
            <hr />
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            @Html.HiddenFor(model => model.CusID)

            <div class="form-group">
                @Html.DisplayName("نام کامل *")
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Fullname, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Fullname, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                
                <div class="col-md-10">
                    <input type="text" name="Username" value="@Model.Username" hidden />
                    @Html.ValidationMessageFor(model => model.Username, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.DisplayName("رمز عبور *")
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Password, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Password, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.DisplayName("ایمیل *")
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.DisplayName("جنسیت")
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Gender, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Gender, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.DisplayName("کد ملی")
                <div class="col-md-10">
                    @Html.EditorFor(model => model.SSN, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.SSN, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.DisplayName("استان")
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Ostan, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Ostan, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.DisplayName("شهر")
                <div class="col-md-10">
                    @Html.EditorFor(model => model.City, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.City, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.DisplayName("آدرس")
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Address, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Address, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.DisplayName("شماره تلفن")
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Phone, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Phone, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.DisplayName("کدپستی")
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Codeposti, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Codeposti, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.DisplayName("شماره کارت")
                <div class="col-md-10">
                    @Html.EditorFor(model => model.CardNumber, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.CardNumber, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.DisplayName("آدرس عکس پروفایل")
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Imagepath, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Imagepath, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                <div class="col-md-offset-2 col-md-10">
                    <input type="button" onclick="Updateform()" value="ذخیره" class="btn btn-primary" />
                </div>
            </div>
        </div>
    </form>
</div>

<script>
        $("#uform").submit(function (e) {
            e.preventDefault();
        });
        function Updateform() {
            var Data = $("#uform").serialize();
            sData = JSON.stringify($("#uform").formToJson());
            jQuery.support.cors = true;
            $.ajax({
            type: 'POST' ,
            dataType : 'JSON',
            contentType : 'application/json; charset=utf-8',
            data: sData,
            url: "/Customer/UpdateProfile",
            success: function (rs) {
                if (rs.success) {
                    toastr.success(rs.message, rs.title, { timeOut: 2000 });
                    setTimeout(() => {
                        window.location.href = '@Url.Action("MyProfile", "Customer")';
                    }, 2000);
                }
                else {
                    toastr.warning(rs.message, rs.title, { timeOut: 3000 });

                }
            },
            error: function (response) {
            toastr.error("مشکل در سرور داخلی. بعدا امتحان کنید." , "خطا" , { timeOut: 3000 });
            }
            });
        }
</script>
